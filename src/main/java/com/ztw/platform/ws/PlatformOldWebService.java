
package com.ztw.platform.ws;

import com.zslin.tools.ConstantTools;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
//, wsdlLocation = ConstantTools.WSDL_LOCATION
@WebServiceClient(name = "PlatformOldWebService", targetNamespace = "http://ws.platform.ztw.com")
public class PlatformOldWebService
    extends Service
{

    private final static URL PLATFORMOLDWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException PLATFORMOLDWEBSERVICE_EXCEPTION;
    private final static QName PLATFORMOLDWEBSERVICE_QNAME = new QName("http://ws.platform.ztw.com", "PlatformOldWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(ConstantTools.WSDL_LOCATION);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PLATFORMOLDWEBSERVICE_WSDL_LOCATION = url;
        PLATFORMOLDWEBSERVICE_EXCEPTION = e;
    }

    public PlatformOldWebService() {
        super(__getWsdlLocation(), PLATFORMOLDWEBSERVICE_QNAME);
    }

    public PlatformOldWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PLATFORMOLDWEBSERVICE_QNAME, features);
    }

    public PlatformOldWebService(URL wsdlLocation) {
        super(wsdlLocation, PLATFORMOLDWEBSERVICE_QNAME);
    }

    public PlatformOldWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PLATFORMOLDWEBSERVICE_QNAME, features);
    }

    public PlatformOldWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PlatformOldWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IPlatformOldWebService
     */
    @WebEndpoint(name = "PlatformOldWebServicePort")
    public IPlatformOldWebService getPlatformOldWebServicePort() {
        return super.getPort(new QName("http://ws.platform.ztw.com", "PlatformOldWebServicePort"), IPlatformOldWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPlatformOldWebService
     */
    @WebEndpoint(name = "PlatformOldWebServicePort")
    public IPlatformOldWebService getPlatformOldWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.platform.ztw.com", "PlatformOldWebServicePort"), IPlatformOldWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PLATFORMOLDWEBSERVICE_EXCEPTION!= null) {
            throw PLATFORMOLDWEBSERVICE_EXCEPTION;
        }
        return PLATFORMOLDWEBSERVICE_WSDL_LOCATION;
    }

}
